//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace LabelConnector.WebReference {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="LicenseServiceSoap", Namespace="http://tempuri.org/")]
    public partial class LicenseService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GenerateOTPcodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCustomersDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateCustomerDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateLogOutDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSessionStateOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateSessionReferenceDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback getOtpfromMailOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateLogDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCustomersUpgradeDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateCustomersVersionUpgradeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCustomerspasswordDataOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public LicenseService() {
            this.Url = global::LabelConnector.Properties.Settings.Default.LabelConnector_WebReference_LicenseService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GenerateOTPcodeCompletedEventHandler GenerateOTPcodeCompleted;
        
        /// <remarks/>
        public event GetCustomersDetailsCompletedEventHandler GetCustomersDetailsCompleted;
        
        /// <remarks/>
        public event UpdateCustomerDetailsCompletedEventHandler UpdateCustomerDetailsCompleted;
        
        /// <remarks/>
        public event UpdateLogOutDetailsCompletedEventHandler UpdateLogOutDetailsCompleted;
        
        /// <remarks/>
        public event GetSessionStateCompletedEventHandler GetSessionStateCompleted;
        
        /// <remarks/>
        public event UpdateSessionReferenceDetailCompletedEventHandler UpdateSessionReferenceDetailCompleted;
        
        /// <remarks/>
        public event getOtpfromMailCompletedEventHandler getOtpfromMailCompleted;
        
        /// <remarks/>
        public event UpdateLogDetailCompletedEventHandler UpdateLogDetailCompleted;
        
        /// <remarks/>
        public event GetCustomersUpgradeDetailsCompletedEventHandler GetCustomersUpgradeDetailsCompleted;
        
        /// <remarks/>
        public event UpdateCustomersVersionUpgradeCompletedEventHandler UpdateCustomersVersionUpgradeCompleted;
        
        /// <remarks/>
        public event GetCustomerspasswordDataCompletedEventHandler GetCustomerspasswordDataCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GenerateOTPcode", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GenerateOTPcode() {
            object[] results = this.Invoke("GenerateOTPcode", new object[0]);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GenerateOTPcodeAsync() {
            this.GenerateOTPcodeAsync(null);
        }
        
        /// <remarks/>
        public void GenerateOTPcodeAsync(object userState) {
            if ((this.GenerateOTPcodeOperationCompleted == null)) {
                this.GenerateOTPcodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGenerateOTPcodeOperationCompleted);
            }
            this.InvokeAsync("GenerateOTPcode", new object[0], this.GenerateOTPcodeOperationCompleted, userState);
        }
        
        private void OnGenerateOTPcodeOperationCompleted(object arg) {
            if ((this.GenerateOTPcodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GenerateOTPcodeCompleted(this, new GenerateOTPcodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCustomersDetails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetCustomersDetails(string EmailId, string Password, string Product, int loop) {
            object[] results = this.Invoke("GetCustomersDetails", new object[] {
                        EmailId,
                        Password,
                        Product,
                        loop});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetCustomersDetailsAsync(string EmailId, string Password, string Product, int loop) {
            this.GetCustomersDetailsAsync(EmailId, Password, Product, loop, null);
        }
        
        /// <remarks/>
        public void GetCustomersDetailsAsync(string EmailId, string Password, string Product, int loop, object userState) {
            if ((this.GetCustomersDetailsOperationCompleted == null)) {
                this.GetCustomersDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCustomersDetailsOperationCompleted);
            }
            this.InvokeAsync("GetCustomersDetails", new object[] {
                        EmailId,
                        Password,
                        Product,
                        loop}, this.GetCustomersDetailsOperationCompleted, userState);
        }
        
        private void OnGetCustomersDetailsOperationCompleted(object arg) {
            if ((this.GetCustomersDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCustomersDetailsCompleted(this, new GetCustomersDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateCustomerDetails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateCustomerDetails(string EmailId, string Password, string Product) {
            object[] results = this.Invoke("UpdateCustomerDetails", new object[] {
                        EmailId,
                        Password,
                        Product});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateCustomerDetailsAsync(string EmailId, string Password, string Product) {
            this.UpdateCustomerDetailsAsync(EmailId, Password, Product, null);
        }
        
        /// <remarks/>
        public void UpdateCustomerDetailsAsync(string EmailId, string Password, string Product, object userState) {
            if ((this.UpdateCustomerDetailsOperationCompleted == null)) {
                this.UpdateCustomerDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateCustomerDetailsOperationCompleted);
            }
            this.InvokeAsync("UpdateCustomerDetails", new object[] {
                        EmailId,
                        Password,
                        Product}, this.UpdateCustomerDetailsOperationCompleted, userState);
        }
        
        private void OnUpdateCustomerDetailsOperationCompleted(object arg) {
            if ((this.UpdateCustomerDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateCustomerDetailsCompleted(this, new UpdateCustomerDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateLogOutDetails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateLogOutDetails(string EmailId, string Product) {
            object[] results = this.Invoke("UpdateLogOutDetails", new object[] {
                        EmailId,
                        Product});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateLogOutDetailsAsync(string EmailId, string Product) {
            this.UpdateLogOutDetailsAsync(EmailId, Product, null);
        }
        
        /// <remarks/>
        public void UpdateLogOutDetailsAsync(string EmailId, string Product, object userState) {
            if ((this.UpdateLogOutDetailsOperationCompleted == null)) {
                this.UpdateLogOutDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateLogOutDetailsOperationCompleted);
            }
            this.InvokeAsync("UpdateLogOutDetails", new object[] {
                        EmailId,
                        Product}, this.UpdateLogOutDetailsOperationCompleted, userState);
        }
        
        private void OnUpdateLogOutDetailsOperationCompleted(object arg) {
            if ((this.UpdateLogOutDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateLogOutDetailsCompleted(this, new UpdateLogOutDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSessionState", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public clsGetCustomersDetails GetSessionState(string EmailId, string Product) {
            object[] results = this.Invoke("GetSessionState", new object[] {
                        EmailId,
                        Product});
            return ((clsGetCustomersDetails)(results[0]));
        }
        
        /// <remarks/>
        public void GetSessionStateAsync(string EmailId, string Product) {
            this.GetSessionStateAsync(EmailId, Product, null);
        }
        
        /// <remarks/>
        public void GetSessionStateAsync(string EmailId, string Product, object userState) {
            if ((this.GetSessionStateOperationCompleted == null)) {
                this.GetSessionStateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSessionStateOperationCompleted);
            }
            this.InvokeAsync("GetSessionState", new object[] {
                        EmailId,
                        Product}, this.GetSessionStateOperationCompleted, userState);
        }
        
        private void OnGetSessionStateOperationCompleted(object arg) {
            if ((this.GetSessionStateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSessionStateCompleted(this, new GetSessionStateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateSessionReferenceDetail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateSessionReferenceDetail(string EmailId, int ReferenceNumber, string Product) {
            object[] results = this.Invoke("UpdateSessionReferenceDetail", new object[] {
                        EmailId,
                        ReferenceNumber,
                        Product});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateSessionReferenceDetailAsync(string EmailId, int ReferenceNumber, string Product) {
            this.UpdateSessionReferenceDetailAsync(EmailId, ReferenceNumber, Product, null);
        }
        
        /// <remarks/>
        public void UpdateSessionReferenceDetailAsync(string EmailId, int ReferenceNumber, string Product, object userState) {
            if ((this.UpdateSessionReferenceDetailOperationCompleted == null)) {
                this.UpdateSessionReferenceDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateSessionReferenceDetailOperationCompleted);
            }
            this.InvokeAsync("UpdateSessionReferenceDetail", new object[] {
                        EmailId,
                        ReferenceNumber,
                        Product}, this.UpdateSessionReferenceDetailOperationCompleted, userState);
        }
        
        private void OnUpdateSessionReferenceDetailOperationCompleted(object arg) {
            if ((this.UpdateSessionReferenceDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateSessionReferenceDetailCompleted(this, new UpdateSessionReferenceDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getOtpfromMail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getOtpfromMail(string EmailId, string Product) {
            object[] results = this.Invoke("getOtpfromMail", new object[] {
                        EmailId,
                        Product});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getOtpfromMailAsync(string EmailId, string Product) {
            this.getOtpfromMailAsync(EmailId, Product, null);
        }
        
        /// <remarks/>
        public void getOtpfromMailAsync(string EmailId, string Product, object userState) {
            if ((this.getOtpfromMailOperationCompleted == null)) {
                this.getOtpfromMailOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetOtpfromMailOperationCompleted);
            }
            this.InvokeAsync("getOtpfromMail", new object[] {
                        EmailId,
                        Product}, this.getOtpfromMailOperationCompleted, userState);
        }
        
        private void OngetOtpfromMailOperationCompleted(object arg) {
            if ((this.getOtpfromMailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getOtpfromMailCompleted(this, new getOtpfromMailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateLogDetail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateLogDetail(string EmailId, string Product, string status, string ProcessorId) {
            object[] results = this.Invoke("UpdateLogDetail", new object[] {
                        EmailId,
                        Product,
                        status,
                        ProcessorId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateLogDetailAsync(string EmailId, string Product, string status, string ProcessorId) {
            this.UpdateLogDetailAsync(EmailId, Product, status, ProcessorId, null);
        }
        
        /// <remarks/>
        public void UpdateLogDetailAsync(string EmailId, string Product, string status, string ProcessorId, object userState) {
            if ((this.UpdateLogDetailOperationCompleted == null)) {
                this.UpdateLogDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateLogDetailOperationCompleted);
            }
            this.InvokeAsync("UpdateLogDetail", new object[] {
                        EmailId,
                        Product,
                        status,
                        ProcessorId}, this.UpdateLogDetailOperationCompleted, userState);
        }
        
        private void OnUpdateLogDetailOperationCompleted(object arg) {
            if ((this.UpdateLogDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateLogDetailCompleted(this, new UpdateLogDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCustomersUpgradeDetails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public clsCustomerUpgradeVersion GetCustomersUpgradeDetails(string EmailId, string Product) {
            object[] results = this.Invoke("GetCustomersUpgradeDetails", new object[] {
                        EmailId,
                        Product});
            return ((clsCustomerUpgradeVersion)(results[0]));
        }
        
        /// <remarks/>
        public void GetCustomersUpgradeDetailsAsync(string EmailId, string Product) {
            this.GetCustomersUpgradeDetailsAsync(EmailId, Product, null);
        }
        
        /// <remarks/>
        public void GetCustomersUpgradeDetailsAsync(string EmailId, string Product, object userState) {
            if ((this.GetCustomersUpgradeDetailsOperationCompleted == null)) {
                this.GetCustomersUpgradeDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCustomersUpgradeDetailsOperationCompleted);
            }
            this.InvokeAsync("GetCustomersUpgradeDetails", new object[] {
                        EmailId,
                        Product}, this.GetCustomersUpgradeDetailsOperationCompleted, userState);
        }
        
        private void OnGetCustomersUpgradeDetailsOperationCompleted(object arg) {
            if ((this.GetCustomersUpgradeDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCustomersUpgradeDetailsCompleted(this, new GetCustomersUpgradeDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateCustomersVersionUpgrade", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateCustomersVersionUpgrade(string EmailId, string CurrentVersion, string Product, int loop) {
            object[] results = this.Invoke("UpdateCustomersVersionUpgrade", new object[] {
                        EmailId,
                        CurrentVersion,
                        Product,
                        loop});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateCustomersVersionUpgradeAsync(string EmailId, string CurrentVersion, string Product, int loop) {
            this.UpdateCustomersVersionUpgradeAsync(EmailId, CurrentVersion, Product, loop, null);
        }
        
        /// <remarks/>
        public void UpdateCustomersVersionUpgradeAsync(string EmailId, string CurrentVersion, string Product, int loop, object userState) {
            if ((this.UpdateCustomersVersionUpgradeOperationCompleted == null)) {
                this.UpdateCustomersVersionUpgradeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateCustomersVersionUpgradeOperationCompleted);
            }
            this.InvokeAsync("UpdateCustomersVersionUpgrade", new object[] {
                        EmailId,
                        CurrentVersion,
                        Product,
                        loop}, this.UpdateCustomersVersionUpgradeOperationCompleted, userState);
        }
        
        private void OnUpdateCustomersVersionUpgradeOperationCompleted(object arg) {
            if ((this.UpdateCustomersVersionUpgradeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateCustomersVersionUpgradeCompleted(this, new UpdateCustomersVersionUpgradeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCustomerspasswordData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetCustomerspasswordData(string EmailId, string Product) {
            object[] results = this.Invoke("GetCustomerspasswordData", new object[] {
                        EmailId,
                        Product});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetCustomerspasswordDataAsync(string EmailId, string Product) {
            this.GetCustomerspasswordDataAsync(EmailId, Product, null);
        }
        
        /// <remarks/>
        public void GetCustomerspasswordDataAsync(string EmailId, string Product, object userState) {
            if ((this.GetCustomerspasswordDataOperationCompleted == null)) {
                this.GetCustomerspasswordDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCustomerspasswordDataOperationCompleted);
            }
            this.InvokeAsync("GetCustomerspasswordData", new object[] {
                        EmailId,
                        Product}, this.GetCustomerspasswordDataOperationCompleted, userState);
        }
        
        private void OnGetCustomerspasswordDataOperationCompleted(object arg) {
            if ((this.GetCustomerspasswordDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCustomerspasswordDataCompleted(this, new GetCustomerspasswordDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class clsGetCustomersDetails {
        
        private string emailField;
        
        private string passwordField;
        
        private bool statusField;
        
        private string expiryDateField;
        
        private string licenseField;
        
        private string productField;
        
        private int sessionField;
        
        private System.DateTime sessionDateField;
        
        private string sessionReferenceField;
        
        private string referenceField;
        
        /// <remarks/>
        public string Email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
            }
        }
        
        /// <remarks/>
        public string Password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
            }
        }
        
        /// <remarks/>
        public bool Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public string ExpiryDate {
            get {
                return this.expiryDateField;
            }
            set {
                this.expiryDateField = value;
            }
        }
        
        /// <remarks/>
        public string License {
            get {
                return this.licenseField;
            }
            set {
                this.licenseField = value;
            }
        }
        
        /// <remarks/>
        public string Product {
            get {
                return this.productField;
            }
            set {
                this.productField = value;
            }
        }
        
        /// <remarks/>
        public int Session {
            get {
                return this.sessionField;
            }
            set {
                this.sessionField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime SessionDate {
            get {
                return this.sessionDateField;
            }
            set {
                this.sessionDateField = value;
            }
        }
        
        /// <remarks/>
        public string SessionReference {
            get {
                return this.sessionReferenceField;
            }
            set {
                this.sessionReferenceField = value;
            }
        }
        
        /// <remarks/>
        public string reference {
            get {
                return this.referenceField;
            }
            set {
                this.referenceField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class clsCustomerUpgradeVersion {
        
        private string emailField;
        
        private string upgradeVersionField;
        
        private string downloadLinkField;
        
        private string currentVersionField;
        
        private string referenceField;
        
        private string statusField;
        
        private System.DateTime lastLoginDateField;
        
        /// <remarks/>
        public string Email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
            }
        }
        
        /// <remarks/>
        public string UpgradeVersion {
            get {
                return this.upgradeVersionField;
            }
            set {
                this.upgradeVersionField = value;
            }
        }
        
        /// <remarks/>
        public string DownloadLink {
            get {
                return this.downloadLinkField;
            }
            set {
                this.downloadLinkField = value;
            }
        }
        
        /// <remarks/>
        public string CurrentVersion {
            get {
                return this.currentVersionField;
            }
            set {
                this.currentVersionField = value;
            }
        }
        
        /// <remarks/>
        public string Reference {
            get {
                return this.referenceField;
            }
            set {
                this.referenceField = value;
            }
        }
        
        /// <remarks/>
        public string Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime LastLoginDate {
            get {
                return this.lastLoginDateField;
            }
            set {
                this.lastLoginDateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GenerateOTPcodeCompletedEventHandler(object sender, GenerateOTPcodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GenerateOTPcodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GenerateOTPcodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetCustomersDetailsCompletedEventHandler(object sender, GetCustomersDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCustomersDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCustomersDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void UpdateCustomerDetailsCompletedEventHandler(object sender, UpdateCustomerDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateCustomerDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateCustomerDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void UpdateLogOutDetailsCompletedEventHandler(object sender, UpdateLogOutDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateLogOutDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateLogOutDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetSessionStateCompletedEventHandler(object sender, GetSessionStateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSessionStateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSessionStateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public clsGetCustomersDetails Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((clsGetCustomersDetails)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void UpdateSessionReferenceDetailCompletedEventHandler(object sender, UpdateSessionReferenceDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateSessionReferenceDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateSessionReferenceDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void getOtpfromMailCompletedEventHandler(object sender, getOtpfromMailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getOtpfromMailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getOtpfromMailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void UpdateLogDetailCompletedEventHandler(object sender, UpdateLogDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateLogDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateLogDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetCustomersUpgradeDetailsCompletedEventHandler(object sender, GetCustomersUpgradeDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCustomersUpgradeDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCustomersUpgradeDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public clsCustomerUpgradeVersion Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((clsCustomerUpgradeVersion)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void UpdateCustomersVersionUpgradeCompletedEventHandler(object sender, UpdateCustomersVersionUpgradeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateCustomersVersionUpgradeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateCustomersVersionUpgradeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetCustomerspasswordDataCompletedEventHandler(object sender, GetCustomerspasswordDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCustomerspasswordDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCustomerspasswordDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591